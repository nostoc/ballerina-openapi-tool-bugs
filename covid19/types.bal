// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/data.jsondata;
import ballerina/http;

public type WorldBankResponseOneOf2 IndicatorInformation[]?;

public type PaginationData record {
    string? sourceid;
    @jsondata:Name {value: "per_page"}
    int perPage;
    int total;
    int pages;
    string? lastupdated;
    string? sourcename;
    int page;
};

# Represent country population
public type IndicatorInformation record {
    # Data indicator
    Indicator indicator;
    # Date-range by year, month or quarter that scopes the result-set
    string date;
    # Represent a Country
    Country country;
    # Unit of measure
    string unit;
    # Country ISO3 Code
    string countryiso3code;
    # Decimal
    decimal 'decimal;
    # Country population
    int? value;
    # OBS Status
    @jsondata:Name {value: "obs_status"}
    string obsStatus?;
};

# Represents the Queries record for the operation: getAccessToElectricityPercentageByCountry
public type GetAccessToElectricityPercentageByCountryQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getPopulation
public type GetPopulationQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getGovernmentExpenditureOnPrimaryEducationByCountry
public type GetGovernmentExpenditureOnPrimaryEducationByCountryQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Data indicator
public type Indicator record {
    # Id of the indicator
    string id;
    # Value represent by the indicator
    string value;
};

# Represents the Queries record for the operation: getAccessToElectricityPercentage
public type GetAccessToElectricityPercentageQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getYouthLiteracyRate
public type GetYouthLiteracyRateQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getGovernmentExpenditureOnPrimaryEducation
public type GetGovernmentExpenditureOnPrimaryEducationQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getPopulationByCountry
public type GetPopulationByCountryQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

public type WorldBankResponse InlineArrayItemsWorldBankResponse[];

# Represents the Queries record for the operation: getGDPByCountry
public type GetGDPByCountryQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getGDP
public type GetGDPQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represents the Queries record for the operation: getYouthLiteracyRateByCountry
public type GetYouthLiteracyRateByCountryQueries record {
    # Date-range by year, month or quarter that scopes the result-set
    string date = "2010";
    # Per page record count
    @http:Query {name: "per_page"}
    int perPage = 50;
    # Format of the response
    string format = "json";
    # Page number
    int page = 1;
};

# Represent a Country
public type Country record {
    # Country code
    string id;
    # Country name
    string value;
};

public type InlineArrayItemsWorldBankResponse PaginationData|WorldBankResponseOneOf2?;

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};
